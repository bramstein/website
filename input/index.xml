<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<article>
  <title>Latest updates</title>

  <sidebar>
    <title>About</title>

    <para>I'm a programmer and web developer from the Netherlands with a
    passion for creating usable software, websites, and when I have some spare
    time, games.</para>

    <para>This site contains some of my work and hobby projects. Feel free to
    look around.</para>
  </sidebar>

  <sidebar>
    <title>Twitter updates</title>

    <itemizedlist id="twitter_update_list">
      <listitem>
        <para></para>
      </listitem>
    </itemizedlist>

    <para><ulink url="http://twitter.com/bram_stein">Follow me on
    Twitter</ulink></para>
  </sidebar>

  <sidebar id="test">
    <title>Feeds</title>

    <para><mediaobject>
        <imageobject>
          <imagedata fileref="/images/feed.png" />
        </imageobject>
      </mediaobject> <ulink url="rss.xml">RSS Feed</ulink></para>
  </sidebar>

  <section>
    <title>jQuery 1.4.2 support</title>

    <subtitle>Posted on Saturday 20 March 2010</subtitle>

    <para>Just a quick note: <ulink
    url="http://www.bramstein.com/projects/">all my projects</ulink> relying
    or extending jQuery now support jQuery 1.4.2. Almost none of the projects
    required any changes, except for the <ulink type=""
    url="http://www.bramstein.com/projects/text-overflow/">jQuery Text
    Overflow plugin</ulink>, which is now at version 0.14 and works with both
    jQuery 1.3.2 and 1.4.2.</para>
  </section>

  <section>
    <title><ulink type=""
    url="http://www.bramstein.com/projects/typeset/myfit.html">TeX line
    breaking algorithm in HTML5 Canvas</ulink></title>

    <subtitle>Posted on Saturday November 7 2009</subtitle>

    <para>I spent some time over the last few weeks implementing the <ulink
    url="http://www.bramstein.com/projects/typeset/myfit.html">Knuth and Plass
    line breaking algorithm (as used in TeX and LaTeX) using JavaScript and
    the HTML5 canvas</ulink> element. The code is still quite rough, but early
    results are quite promising and in my opinion better than what browsers
    commonly implement. The <ulink
    url="http://www.bramstein.com/projects/typeset/myfit.html">example
    page</ulink> contains an example paragraph, some rough documentation and a
    rather random collection of ideas and notes.</para>
  </section>

  <section>
    <title><ulink url="http://www.bramstein.com/projects/jlayout/">Grid layout
    update &amp; jQuery UI integration demo</ulink></title>

    <subtitle>Posted on Saturday November 7 2009</subtitle>

    <para>The <ulink url="http://www.bramstein.com/projects/jlayout/">jLayout
    grid layout</ulink> received a small bug fix and a new feature; you can
    now specify how you want the grid to be filled in, from left to right and
    top to bottom, or top to bottom and left to right. There is also a <ulink
    url="http://www.bramstein.com/projects/jlayout/jquery-ui.html">new
    demo</ulink> showing how easily jQuery UI components can be integrated
    with jLayout.</para>
  </section>

  <section>
    <title><ulink
    url="http://www.bramstein.com/projects/text-overflow/">jQuery text
    overflow plugin: inline markup support</ulink></title>

    <subtitle>Posted on Saturday September 12 2009</subtitle>

    <para>The <ulink
    url="http://www.bramstein.com/projects/text-overflow/">jQuery Text
    Overflow plugin</ulink> now supports truncating text nodes with inline
    markup. This means you can now call the plugin on any DOM element, and not
    have to worry about it removing your inline markup or creating invalid
    markup.</para>
  </section>

  <section>
    <title><ulink type=""
    url="http://www.bramstein.com/projects/interplot/plot.html">Plotting with
    JavaScript, Canvas &amp; Interval Arithmetic</ulink></title>

    <subtitle>Posted on Wednesday September 2 2009</subtitle>

    <para>I decided to have some fun with the new features in Firefox 3.5 and
    reimplemented the function plotting from my (still unreleased) chart
    library using the HTML5 Canvas element and Web Workers. Charts are plotted
    using <ulink type=""
    url="http://en.wikipedia.org/wiki/Interval_arithmetic">interval
    arithmetic</ulink>. The basic idea behind this is to recursively subdivide
    the range in which to plot a function. It keeps subdividing the range
    until the subdivisions are smaller than one screen pixel. At that point it
    will plot a pixel on that location. This pixel is then guaranteed to
    contain the correct solution. This also means that plots are always
    correct, in that they have no missing singularities or artifacts that are
    difficult to plot using other methods (well, that's the theory anyway―the
    interval arithmetic implementation I wrote does not guarantee
    correctness.) Web workers are used to run some of the recursive
    subdivisions in separate "threads" for better performance.</para>

    <para>Equations are parsed using a <ulink
    url="http://en.wikipedia.org/wiki/Shunting-yard_algorithm">Shunting Yard
    parser</ulink> and converted internally to interval arithmetic. Most
    common mathematical operators are supported, such as: sin, cos, sqrt, abs,
    fmod, exp, log, et cetera. The code is still very much alpha quality, but
    I thought it might be interesting to put it online. You can find it right
    here: <ulink
    url="http://www.bramstein.com/projects/interplot/plot.html">http://www.bramstein.com/projects/interplot/plot.html</ulink>.</para>
  </section>

  <section>
    <title><ulink url="http://www.bramstein.com/projects/preprocess/"
    userlevel="">JavaScript Preprocessor</ulink></title>

    <subtitle>Posted on Monday August 10 2009</subtitle>

    <para>I spent the weekend working on a new project: a simple <ulink
    url="http://www.bramstein.com/projects/preprocess/">JavaScript
    preprocessor</ulink> to enable conditional compilation in JavaScript code
    using the syntax of the C preprocessor (well, a subset of.) This will
    hopefully make it easy to generate multiple versions of your project
    to―for example―create a debug build, or a specialized version designed to
    work in restrictive environments. It can be called from JavaScript, an Ant
    build script, or the command line.</para>
  </section>

  <section>
    <title><ulink url="http://www.bramstein.com/projects/jlayout/">New jLayout
    algorithm, examples &amp; plugin update</ulink></title>

    <subtitle>Posted on Thursday July 30 2009</subtitle>

    <para>As promised a new layout algorithm: flow layout. The flow layout
    algoritm lays out components in rows with components overflowing to new
    rows if there is not enough horizontal space. The <ulink
    url="http://www.bramstein.com/projects/jlayout/jquery-plugin.html">jQuery
    jLayout plugin</ulink> has also been updated with a minor bug fix for
    nested border layouts. There are also three new examples, <ulink
    url="http://www.bramstein.com/projects/jlayout/borderlayout-resize-nested.html">a
    nested resizable border layout</ulink>, <ulink
    url="http://www.bramstein.com/projects/jlayout/borderlayout-resize-ghost.html">a
    resizable layout with guides</ulink>, and <ulink
    url="http://www.bramstein.com/projects/jlayout/borderlayout-resize-smooth.html">an
    example of a smoothly resizing layout</ulink>.</para>
  </section>

  <section>
    <title><ulink url="http://www.bramstein.com/articles/jquery-ui.html">Book
    Review: JQuery UI 1.6: The User Interface Library for
    jQuery</ulink></title>

    <subtitle>Posted on Wednesday July 29 2009</subtitle>

    <para>I recently started using the <ulink
    url="http://jqueryui.com/">jQuery UI library</ulink> in a work project so
    I was rather interested when I noticed a book had been published on this
    library by <ulink url="http://www.danwellman.co.uk/">Dan Wellman</ulink>.
    You can read <ulink
    url="http://www.bramstein.com/articles/jquery-ui.html">my review of
    “jQuery UI 1.6: The User Interface Library for jQuery”</ulink> in the
    articles book review section.</para>
  </section>

  <section>
    <title><ulink url="http://www.bramstein.com/projects/text-align/">Text
    Alignment jQuery plugin</ulink></title>

    <subtitle>Posted on Saturday July 4 2009</subtitle>

    <para>Imagine you have worked hard to make your tables look good, but one
    thing keeps bugging you; the alignment of the text in the cells. You
    would, for example, like to align the contents of each cell on the comma
    character. Unfortunately, no browser supports aligning table cells on
    characters. This is where the new <ulink type=""
    url="http://www.bramstein.com/projects/text-align/">jQuery Text Alignment
    Plugin</ulink> comes in; it adds support for aligning text based on
    characters to all browsers. You can see it in action on the <ulink
    url="http://www.bramstein.com/projects/text-align/examples.html"
    userlevel="">example page</ulink>, or read the documentation on <ulink
    url="http://www.bramstein.com/projects/text-align/">the text-alignment
    plugin project page</ulink>.</para>
  </section>

  <section>
    <title><ulink type=""
    url="http://www.bramstein.com/projects/text-overflow/">New jQuery plugin:
    CSS3 text-overflow</ulink></title>

    <subtitle>Posted on Sunday June 28 2009</subtitle>

    <para>This new jQuery plugin implements a simplified version of the <ulink
    url="https://developer.mozilla.org/en/CSS/text-overflow">CSS3
    text-overflow</ulink> property, which allows stylesheet authors to specify
    how and where text should be clipped. This is usually done by adding an
    ellipsis character "<literal>…</literal>" or three dots at the point the
    text should be cut off. Unfortunately, not all browser support this CSS
    property, and this plugin was designed to simulate it when the property is
    not natively available. The plugin is basically a rewrite of <ulink
    url="http://devongovett.wordpress.com/2009/04/06/text-overflow-ellipsis-for-firefox-via-jquery/">an
    existing jQuery text-overflow plugin</ulink>, with the goal of being
    faster and more reliable (for example, one of the optimizations is that it
    uses a binary search to find the correct clipping point, instead of a
    linear search.)</para>
  </section>

  <section>
    <title><ulink type=""
    url="http://www.bramstein.com/projects/xsltjson/">XSLTJSON Bug fix
    release</ulink></title>

    <subtitle>Posted on Sunday June 28 2009</subtitle>

    <para>Today sees a new release of <ulink
    url="http://www.bramstein.com/projects/xsltjson/">XSLTJSON</ulink>,
    bringing the version number up to 0.87. This new release contains several
    bug fixes for the recently introduced json:force-array feature. Upgrading
    from previous versions is recommended if you are using the force-array
    feature.</para>
  </section>

  <section>
    <title><ulink url="http://www.bramstein.com/projects/jlayout/">New jLayout
    release</ulink></title>

    <subtitle>Posted on Sunday May 31 2009</subtitle>

    <para>In a further step to compatibility with the jQuery UI guidelines,
    this new release reduces the number of methods added to the jQuery
    function namespace to exactly one. Additionally, each layout algorithm is
    now distributed as a separate file, which hopefully makes it easier to
    extend the library with other algorithms. The <ulink
    url="http://www.bramstein.com/projects/jlayout/jquery-plugin.html">jLayout
    jQuery plugin</ulink> page now features more examples (such as a <ulink
    url="http://www.bramstein.com/projects/jlayout/borderlayout-toggle.html">toggle-able
    border layout</ulink>, and a <ulink
    url="http://www.bramstein.com/projects/jlayout/content-scroll.html">layout
    with scrolling content</ulink>), and an updated <abbrev>FAQ</abbrev>
    section. I'm planning on soon releasing a new layout algorithm plus
    articles on how to extend jLayout with new algorithms, and how to use
    jLayout with the HTML5 canvas element.</para>
  </section>

  <section>
    <title><ulink url="http://www.bramstein.com/projects/xsltjson/">New
    XSLTJSON version</ulink></title>

    <subtitle>Posted on Sunday May 31 2009</subtitle>

    <para>This new release includes better handling of native JSON data types
    such as booleans and numbers, and a new source attribute that instructs
    XSLTJSON to create arrays instead of objects.</para>
  </section>

  <section>
    <title><ulink url="http://www.bramstein.com/projects/column/">Bug fix for
    jQuery column selector plugin</ulink></title>

    <subtitle>Posted on Sunday 17 May 2009</subtitle>

    <para>Version 0.13 of the column selector plugin has been released, and
    fixes the plugin inadvertently polluting the global namespace.</para>
  </section>

  <section>
    <title><ulink url="http://www.bramstein.com/projects/column/">jQuery
    column selector plugin</ulink></title>

    <subtitle>Posted on Thursday 16 April 2009</subtitle>

    <para>New project time; I mentioned some time ago that I was close to
    finishing two new projects. Today I finally got around to releasing a new
    <ulink url="http://www.bramstein.com/projects/column/">jQuery plugin for
    selecting table columns</ulink>. The plugin adds a new selector to the
    jQuery selector API for retrieving table cells by their column index. It
    supports tables with column and row spans transparently, no matter how
    complex a table is. The syntax for selecting column cells is simple and
    similar to other jQuery selectors, so the learning curve should be very
    small.</para>
  </section>

  <section>
    <title><ulink url="http://www.bramstein.com/projects/jlayout/">jLayout
    updated &amp; jQuery UI integration example</ulink></title>

    <subtitle>Posted on Wednesday 15 April 2009</subtitle>

    <para>The <ulink url="http://www.bramstein.com/projects/jlayout/">jLayout
    library</ulink> has received an update; the new version is mostly a
    refactoring of the code and as a result the file size is slightly smaller
    than before (while keeping the same functionality.) It is also a first
    step towards integration with the jQuery UI framework. Also included in
    this update is a new example which demonstrates how to use the jQuery UI
    framework to make a <ulink type=""
    url="http://www.bramstein.com/projects/jlayout/borderlayout-resize.html">full-screen
    resizable border layout</ulink>. As a bonus, this version has been tested
    with jQuery 1.3.2, which works just fine.</para>
  </section>

  <section>
    <title><ulink type=""
    url="http://www.bramstein.com/articles/object-oriented-javascript.html">Book
    Review: Object Oriented JavaScript</ulink></title>

    <subtitle>Posted on Tuesday 31 March 2009</subtitle>

    <para>A few weeks ago I was asked by <ulink type=""
    url="http://www.packtpub.com/">Packt Publishing</ulink> to review one of
    their titles “<ulink
    url="http://www.packtpub.com/object-oriented-javascript-applications-libraries/book">Object
    Oriented JavaScript: Create scalable, reusable high-quality JavaScript
    applications and libraries</ulink>” by Stoyan Stefanov. As an avid reader
    and obsessed with all things JavaScript I couldn't say no, as you can see
    in <ulink
    url="http://www.bramstein.com/articles/object-oriented-javascript.html">my
    review of Object Oriented JavaScript</ulink>.</para>
  </section>

  <section>
    <title><ulink url="http://www.bramstein.com/projects/xsltjson/">New
    XSLTJSON version</ulink></title>

    <subtitle>Posted on Friday 27 February 2009</subtitle>

    <para>I've just uploaded a <ulink
    url="http://www.bramstein.com/projects/xsltjson/">new XSLTJSON
    version</ulink>, with exactly one new feature and two minor bug fixes. It
    is now possible to skip the root element of a XML document and only have
    the child elements returned using the skip-root parameter. The
    <acronym>JSONP</acronym> support has changed to not produce parentheses
    when it is turned off (invalidating the <acronym>JSON</acronym>), and the
    stylesheet now supports <acronym>XML</acronym> parsers that do not
    properly match entity encoded new line control characters (that's a
    mouthful, but what it comes down to is that running XSLTJSON on some XSLT
    processors generated JSON with unescaped newlines.)</para>

    <para>Last update I mentioned two new projects that have kept me busy. I
    haven't finished either project yet, but I'll give some hints as to the
    nature of one of them: <ulink
    url="http://www.bramstein.com/projects/chart/scatter.png">Canvas</ulink>,
    <ulink
    url="http://www.bramstein.com/projects/chart/bar.png">JavaScript</ulink>,
    <ulink
    url="http://www.bramstein.com/projects/chart/line.png">chart</ulink>,
    <ulink type=""
    url="http://www.bramstein.com/projects/chart/plot.png">plotting</ulink>,
    and <ulink url="http://www.bramstein.com/projects/chart/histogram.png"
    userlevel="">almost finished</ulink>. I hope you can figure it out from
    that.</para>
  </section>

  <section>
    <title><ulink url="http://www.bramstein.com/projects/jlayout/">jQuery 1.3
    support for jLayout</ulink></title>

    <subtitle>Posted on Saturday 17 January 2009</subtitle>

    <para>Happy belated new year! It has been a while since I posted; moving
    twice, starting a new job, and writing your thesis simultaneously tends to
    do that. Things seem to be calming down now, and I hope to finish and
    release two new projects soon. In the meantime I've set up a <ulink
    type="" url="http://groups.google.com/group/jlayout/">support group for
    the jLayout library</ulink> for general discussion and support. I have
    also tested both <ulink
    url="http://www.bramstein.com/projects/jlayout/">jLayout</ulink> and
    <ulink url="http://www.bramstein.com/projects/jsizes/">JSizes</ulink> with
    the new <ulink
    url="http://blog.jquery.com/2009/01/14/jquery-13-and-the-jquery-foundation/">jQuery
    1.3 release</ulink>. Neither required any changes, so no new release. I
    did however remove the “experimental” warning on the jLayout plugin page,
    and consider it stable and reasonably well tested―it works in all major
    browsers including Internet Explorer 6.</para>
  </section>

  <section>
    <title><ulink url="http://www.bramstein.com/projects/jfun/">Functional
    Pattern Matching in JavaScript</ulink></title>

    <subtitle>Posted on Sunday 05 October 2008</subtitle>

    <para>I've turned the articles on pattern matching in JavaScript into a
    library. The code is completely rewritten, shorter, more efficient, better
    tested and no longer depends on the Junify unification library. Please see
    the <ulink type="" url="http://www.bramstein.com/projects/jfun/">project
    page</ulink> for details on the syntax, documentation and examples.</para>
  </section>

  <section>
    <title><ulink url="http://www.bramstein.com/projects/jlayout/">New jLayout
    algorithm &amp; IE6 support</ulink></title>

    <subtitle>Posted on Saturday 04 October 2008</subtitle>

    <para>I've uploaded a new version of <ulink
    url="http://www.bramstein.com/projects/jlayout/">jLayout</ulink>, with
    support for a new layout algorithm called ‘flex-grid’. The flex-grid
    algorithm allows you to lay out components in a grid with flexible column
    and row sizes. The <ulink
    url="http://www.bramstein.com/projects/jlayout/jquery-plugin.html">jLayout
    jQuery plugin</ulink> has also been updated and now supports Internet
    Explorer 6 (in standards mode). Support for IE6 brought up a small bug in
    the <ulink url="http://www.bramstein.com/projects/jsizes/">JSizes jQuery
    plugin</ulink>, which has now been corrected as well.</para>
  </section>

  <section>
    <title><ulink type=""
    url="http://www.bramstein.com/projects/xsltjson/">Rayfish convention
    support for XSLTJSON</ulink></title>

    <subtitle>Posted on Wednesday 03 September 2008</subtitle>

    <para>The XSLTJSON project now supports <ulink
    url="http://onperl.org/blog/onperl/page/rayfish">Micheal Matthew's Rayfish
    convention</ulink> for converting XML to JSON. The Rayfish convention
    creates highly structured JSON from your XML, and is a good choice when
    dealing with data centric XML files. Additionally I've created unit tests
    for all supported output formats and made sure that all are
    passing.</para>
  </section>

  <section>
    <title>JavaScript Pattern Matching &amp; JUnify, jLayout updates</title>

    <subtitle>Posted on Tuesday 12 August 2008</subtitle>

    <para>I've uploaded a new article on <ulink
    url="http://www.bramstein.com/articles/advanced-pattern-matching.html">advanced
    functional pattern matching in JavaScript</ulink>. The article introduces
    a simplified pattern matching syntax, and shows how to use it with
    algebraic data types. There are also new versions of the <ulink
    url="http://www.bramstein.com/projects/junify/">JUnify library</ulink> and
    the <ulink url="http://www.bramstein.com/projects/jlayout/">jLayout
    library</ulink>. The new JUnify version contains a small modification to
    work together with <ulink
    url="http://w3future.com/weblog/stories/2008/06/16/adtinjs.xml">Sjoerd
    Visscher's algebraic data type library</ulink>, and the jLayout library
    now includes support for Safari 3.</para>
  </section>

  <section>
    <title><ulink url="http://www.bramstein.com/projects/jlayout/">jLayout
    Layout Algorithms &amp; jQuery plugin</ulink></title>

    <subtitle>Posted on Monday 4 August 2008</subtitle>

    <para>The <ulink url="http://www.bramstein.com/projects/jlayout/">jLayout
    JavaScript library</ulink> provides layout algorithms for laying out
    components and containers. The library currently provides two layout
    algorithms: border, which lays out components in five different regions
    and grid, which lays out components in a user defined grid. An <ulink
    url="http://www.bramstein.com/projects/jlayout/jquery-plugin.html"
    userlevel="">experimental jQuery plugin</ulink> to lay out (X)HTML
    elements is also available.</para>
  </section>

  <section>
    <title><ulink url="http://www.bramstein.com/projects/junify/">JUnify
    unification library</ulink></title>

    <subtitle>Posted on Friday 1 August 2008</subtitle>

    <para>JUnify is a JavaScript library for performing unification on objects
    and arrays. Unification is an algorithm to determine the substitutions
    needed to make two expressions match. If the expressions contain
    variables, these will be bound to values in order for the match to
    succeed. If two expressions are not identical or the variables can not be
    bound, the match fails. Unification can, for example, be used to implement
    <ulink
    url="http://www.bramstein.com/articles/pattern-matching.html">pattern
    matching</ulink>, <ulink
    url="http://www.bramstein.com/articles/extracting-object-values.html">object
    property extraction</ulink>, or an expert system.</para>
  </section>

  <section>
    <title><ulink url="http://www.bramstein.com/projects/jsizes/">JSizes
    jQuery plugin</ulink></title>

    <subtitle>Posted on Saturday 26 July 2008</subtitle>

    <para>JSizes is a small plugin for the jQuery JavaScript library which
    adds support for the CSS min-width, min-height, max-width, max-height,
    border-*-width, margin, and padding properties. Additionally it has one
    method for determining whether an element is visible. Because all the size
    methods return numbers, it is safe to use them in calculating DOM element
    dimensions.</para>
  </section>
</article>