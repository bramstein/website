<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<article>
  <title>Programming and design projects</title>

  <sidebar>
    <title>Quick links</title>

    <itemizedlist>
      <listitem>
        <para><ulink url="jlayout/">jLayout</ulink></para>
      </listitem>

      <listitem>
        <para><ulink url="junify/">Junify</ulink></para>
      </listitem>

      <listitem>
        <para><ulink url="jsizes/">JSizes</ulink></para>
      </listitem>

      <listitem>
        <para><ulink url="xsltjson/">XSLTJSON</ulink></para>
      </listitem>

      <listitem>
        <para><ulink url="gui/">GUI Library</ulink></para>
      </listitem>

      <listitem>
        <para><ulink url="quake/">Quake Textures</ulink></para>
      </listitem>
    </itemizedlist>
  </sidebar>

  <section>
    <title><ulink url="jlayout/">jLayout ― JavaScript Layout
    Algorithms</ulink></title>

    <para>The <ulink url="jlayout/">jLayout JavaScript library</ulink>
    provides layout algorithms for laying out components and containers. The
    library currently provides two layout algorithms:
    <methodname>border</methodname>, which lays out components in five
    different regions and <methodname>grid</methodname>, which lays out
    components in a user defined grid. An <ulink
    url="jlayout/jquery-plugin.html" userlevel="">experimental jQuery
    plugin</ulink> to lay out (X)HTML elements is also available.</para>
  </section>

  <section>
    <title><ulink url="junify/">JUnify ― JavaScript Unification
    Library</ulink></title>

    <para>JUnify is a JavaScript library for performing unification on objects
    and arrays. Unification is an algorithm to determine the substitutions
    needed to make two expressions match. If the expressions contain
    variables, these will be bound to values in order for the match to
    succeed. If two expressions are not identical or the variables can not be
    bound, the match fails. Unification can, for example, be used to <ulink
    url="../articles/pattern-matching.html">implement pattern matching</ulink>
    or an expert system.</para>
  </section>

  <section>
    <title><ulink url="jsizes/">JSizes ― jQuery CSS size properties
    plugin</ulink></title>

    <para>JSizes is a small plugin for the <ulink type=""
    url="http://jquery.com/">jQuery JavaScript library</ulink> which adds
    support for the <acronym>CSS</acronym> <property>min-width</property>,
    <property>min-height</property>, <property>max-width</property>,
    <property>max-height</property>, <property>border-*-width</property>,
    <property>margin</property>, and <property>padding</property> properties.
    Additionally it has one method for determining whether an element is
    visible. Because all the size methods return numbers, it is safe to use
    them in calculating <acronym>DOM</acronym> element dimensions.</para>
  </section>

  <section>
    <title><ulink url="xsltjson/">XSLTJSON ― XML to JSON
    transformations</ulink></title>

    <para>XSLTJSON is an <acronym>XSLT</acronym> 2.0 stylesheet to transform
    arbitrary <acronym>XML</acronym> to <ulink
    url="http://json.org/">JavaScript Object Notation</ulink>
    (<acronym>JSON</acronym>). <acronym>JSON</acronym> is a lightweight
    data-interchange format based on a subset of the <ulink
    url="http://en.wikipedia.org/wiki/JavaScript">JavaScript language</ulink>,
    and often offered as an alternative to <acronym>XML</acronym> in—for
    example—web services. To make life easier XSLTJSON allows you to transform
    <acronym>XML</acronym> to <acronym>JSON</acronym> automatically.</para>

    <para>XSLTJSON supports several different <acronym>JSON</acronym> output
    formats, from a compact output format to support for the <ulink
    url="http://badgerfish.ning.com/">BadgerFish convention</ulink>, which
    allows round-trips between <acronym>XML</acronym> and
    <acronym>JSON</acronym>.</para>
  </section>

  <section>
    <title><ulink url="gui/">OpenGL GUI Library</ulink></title>

    <para>A Graphical User Interface (GUI) library for prototyping and
    building game user interfaces. It is based on OpenGL and written in
    (portable) C++. The library is completely free and open-source. Other
    features include:</para>

    <itemizedlist>
      <listitem>
        <para>widgets such as buttons, scrollbars, menuitems, textfields,
        etc.</para>
      </listitem>

      <listitem>
        <para>ability to modify and create custom themes</para>
      </listitem>

      <listitem>
        <para>can be used as an in-game texture (see UITest in the
        demo's)</para>
      </listitem>

      <listitem>
        <para>API similar to Java Swing API</para>
      </listitem>
    </itemizedlist>

    <para>Unfortunately, as my spare time is limited, this project is
    currently on hold and no longer maintained.</para>
  </section>

  <section>
    <title><ulink url="quake/">Quake Menu Textures</ulink></title>

    <para>A set of high resolution Quake1 menu textures for use with <ulink
    url="http://wiki.quakesrc.org/index.php/Engines">modern Quake1
    engines</ulink> such as <ulink
    url="http://www.icculus.org/twilight/darkplaces/">Darkplaces</ulink>. The
    design goal for these textures was to make them as close to the original
    textures as possible, but with a higher resolution.</para>
  </section>
</article>